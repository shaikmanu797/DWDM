plot(evals$bty_avg,evals$gender, xlab="gender")
plot(evals$gender,evals$bty_avg, xlab="gender")
boxplot(evals$gender,evals$bty_avg, xlab="gender")
boxplot(evals$bty_avg, evals$gender xlab="gender")
boxplot(evals$bty_avg, evals$gender, xlab="gender")
boxplot(evals$bty_avg~evals$gender, xlab="gender")
boxplot(evals$bty_avg~evals$age, xlab="gender")
plot(evals$bty_avg~evals$age, xlab="gender")
plot(evals$bty_avg,evals$age, xlab="gender")
plot(evals$bty_avg,evals$age, xlab="bty_avg", ylab="age")
plot(bty_avg~age, data=evals,xlab="bty_avg", ylab="age") + abline(lm())
plot(bty_avg~age, data=evals,xlab="bty_avg", ylab="age") + abline(lm(bty_avg~age, data=evals))
plot(bty_avg~age, data=evals,xlab="age", ylab="bty_avg") + abline(lm(bty_avg~age, data=evals))
plot(bty_avg~age, data=evals,xlab="age", ylab="bty_avg", pch=19, col="turquoise3")
abline(lm(bty_avg~age, data=evals, col="red"))
plot(bty_avg~age, data=evals,xlab="age", ylab="bty_avg", pch=19, col="turquoise3")
abline(lm(bty_avg~age, data=evals),col="red")
m1 <- lm(bty_avg~age, data=evals)
plot(bty_avg~age, data=evals,xlab="age", ylab="bty_avg", pch=19, col="turquoise3")
abline(m1,col="red")
plot(bty_avg~age, data=evals,xlab="age", ylab="bty_avg", pch=19, col="turquoise3",
main="Age vs. Beauty average")
abline(m1,col="red")
boxplot(bty_avg~age, data=evals,xlab="age", ylab="bty_avg", pch=19, col="turquoise3",
main="Age vs. Beauty average")
boxplot(bty_avg~age, data=evals,xlab="age", ylab="bty_avg", col="gray",
main="Age vs. Beauty average")
boxplot(bty_avg~age, data=evals,xlab="age", ylab="bty_avg",
main="Age vs. Beauty average")
bwplot(bty_avg~age, data=evals,xlab="age", ylab="bty_avg",
main="Age vs. Beauty average")
boxplot(bty_avg~age, data=evals,xlab="age", ylab="bty_avg",
main="Age vs. Beauty average")
rm(m1)
boxplot(bty_avg~age, data=evals,xlab="age", ylab="bty_avg", pch=19
main="Age vs. Beauty average")
```{r}
boxplot(bty_avg~age, data=evals,xlab="age", ylab="bty_avg", pch=19,
main="Age vs. Beauty average")
boxplot(bty_avg~age, data=evals,xlab="age", ylab="bty_avg", pch=20,
main="Age vs. Beauty average")
boxplot(bty_avg~age, data=evals,xlab="age", ylab="bty_avg",
main="Age vs. Beauty average")
plot(bty_avg~age, data=evals,xlab="age", ylab="bty_avg", main="Age vs. Beauty average")
boxplot(bty_avg~age, data=evals,xlab="age", ylab="bty_avg", main="Age vs. Beauty average")
evals$bty_avg[which(evals$age==42)]
max(evals$bty_avg[which(evals$age==42)])
plot ( evals $ bty_avg ~ evals $ bty_f1lower )
cor ( evals $ bty_avg , evals $ bty_f1lower )
plot ( evals [, 13 : 19 ])
plot ( evals [, 13 : 19 ])
m_bty_gen <- lm ( score ~ bty_avg + gender , data = evals )
summary ( m_bty_gen )
summary(m_bty_gen)$r.squared
summary(m_bty_gen)$adj.r.squared
m_bty_avg <- lm(score ~ bty_avg, data = evals)
summary(m_bty_avg)
rm(list=ls())
setwd("~/IS665/Exercise_5/")
evals = read.csv(file="evals.csv", header=TRUE, sep=",", dec=".", quote="\"")
hist(evals$score, xlab="score", main="Histogram of score")
skewness <- function(x){
return(3*(mean(x)-median(x))/sd(x))
}
skewness(evals$score)
boxplot(bty_avg~age, data=evals,xlab="age", ylab="bty_avg", main="Age vs. Beauty average")
plot (evals $ bty_avg ~ evals $ bty_f1lower)
cor (evals $ bty_avg , evals $ bty_f1lower)
plot ( evals [, 13 : 19 ])
m_bty_gen <- lm(score ~ bty_avg + gender , data = evals)
summary(m_bty_gen)
m_bty <- lm(score ~ bty_avg, data = evals)
summary(m_bty)
summary(m_bty_gen)
summary(m_bty)$r.squared
summary(m_bty_gen)$r.squared
summary(m_bty)$adj.r.squared
summary(m_bty_gen)$adj.r.squared
summary(m_bty)$coefficients
summary(m_bty_gen)$coefficients
summary(m_bty)
summary(m_bty_gen)
summary(m_bty)$p.value
summary(m_bty)$p
summary(m_bty)$p-value
?multiLines
install.packages('multiLines')
multiLines(m_bty_gen)
multilines(m_bty_gen)
require('multiLines')
require('multilines')
install.packages('multilines')
require('graphics')
multiLines(m_bty_gen)
summary(m_bty)
summary(m_bty_gen)
summary(m_bty)$adj.r.squared
summary(m_bty_gen)$adj.r.squared
m_bty_rank = lm(score ~ bty_avg+rank, data = evals)
m_bty_rank <- lm(score ~ bty_avg+rank, data = evals)
summary(m_bty_rank)
summary(m_bty_gen)
summary(m_bty_rank)
(levelsevals$rank)
levels(evals$rank)
summary(m_bty_rank)
m_full <- lm ( score ~ rank + ethnicity +
gender + language + age + cls_perc_eval + cls_students + cls_level + cls_profs
+ cls_credits + bty_avg + pic_outfit + pic_color , data = evals )
summary ( m_full )
m_full <- lm(score ~ rank + ethnicity + gender + language + age
+ cls_perc_eval + cls_students + cls_level + cls_profs
+ cls_credits + bty_avg + pic_outfit + pic_color , data = evals )
summary(m_full)
summary(m_full)
summary(m_full)$coefficients
min(summary(m_full)$coefficients)
summary(m_full)$coefficients
summary(m_full)
levels(evals$profs)
evals$profs
levels(evals$cls_profs)
plot(score ~ cls_profs, data = evals)
summary(lm(score ~ cls_profs, data=evals))
summary(m_full)
summary(lm(score ~ ethinicity, data=evals))
summary(lm(score ~ ethnicity, data=evals))
summary(m_full)$coefficients
summary(m_full)$coefficients[3]
summary(m_full)[3]
summary(m_full)$coefficients[3]
summary(m_full)$coefficients
summary(m_full)$coefficients[4]
summary(m_full)$coefficients["ethnicitynot minority"]
summary(m_full)$coefficients["ethnicity"]
summary(m_full)$coefficients[summary(m_full)$coefficients == ethnicity]
summary(m_full)$coefficients[summary(m_full)$coefficients == "ethnicitynot minority"]
summary(m_full)$coefficients
summary(m_full)$coefficients.estimate
summary(m_full)$coefficients
summary(m_full)$coefficients[3]
summary(m_full)$coefficients[4,]
summary(m_full)[4,]
summary(m_full)$coefficients[4,]
names(summary(m_full))
summary(m_full)$terms
summary(m_full)$terms[4]
summary(m_full)$terms[4,]
summary(m_full)$coefficients
m_final <- lm(score ~ rank + ethnicity + gender + language + age +
cls_perc_eval + cls_students + cls_level + cls_credits +
bty_avg + pic_outfit + pic_color, data = evals)
summary(m_final)
summary(m_final)
summary(m_final)
names(evals)
m_final2 <- lm(score ~ ethnicity + gender + language + age + cls_perc_eval +
cls_credits + bty_avg + pic_color, data = evals)
summary(m_final2)
summary(m_final)
summary(m_final2)
max_p = max(summary(m_full)$coefficients[, 4])
which(summary(m_full)$coefficients[, 4] == max_p)
The parameter estimate(coefficient estimate) of cls_profs, shown here as cls_profssingle for one of its level single(considered by model) is the least value compared to other parameter estimates. I would expect cls_profs to not have any association with the professor score.
summary(m_full)$coefficients[, 4]
which(summary(m_full)$coefficients[, 4] == min(summary(m_full)$coefficients[, 4]))
which(summary(m_full)$coefficients[, 4] == max(summary(m_full)$coefficients[, 4]))
summary(m_full)$adj.r.squared
summary(m_full)$adj.r.squared[,4]
which(summary(m_full)$coefficients[, 4] == max(summary(m_full)$coefficients[, 4]))
plot(score ~ cls_profs, data = evals)
summary(lm(score ~ cls_profs, data=evals))
summary(lm(score ~ cls_profs, data=evals))$coefficients
summary(lm(score ~ cls_profs, data=evals))$coefficients[,4]
which(summary(m_full)$coefficients[, 4] == max(summary(m_full)$coefficients[, 4]))
plot(score ~ cls_profs, data = evals)
summary(lm(score ~ cls_profs, data=evals))
which(summary(m_full)$coefficients[, 4] == max(summary(m_full)$coefficients[, 4]))
summary(m_full)$coefficients
which(summary(m_full)$coefficients[, 4] == max(summary(m_full)$coefficients[, 4]))
max(summary(m_full)$coefficients
[4]
[1]
;.;l;
summary(m_full)$coefficients[, 4]
which(summary(m_full)$coefficients[, 4] == max(summary(m_full)$coefficients[, 4]))
plot(score ~ cls_profs, data = evals)
summary(lm(score ~ cls_profs, data=evals))
summary(lm(score ~ cls_profs, data=evals))$coefficients[,1]
summary(lm(score ~ cls_profs, data=evals))$coefficients[,2]
summary(lm(score ~ cls_profs, data=evals))$coefficients[,3]
summary(lm(score ~ cls_profs, data=evals))$coefficients[,4]
function (x, arr.ind = FALSE, useNames = TRUE)
which(summary(m_full)$coefficients[, 4] == max(summary(m_full)$coefficients[, 4]))
plot(score ~ cls_profs, data = evals)
summary(lm(score ~ cls_profs, data=evals))
which(summary(m_full)$coefficients[, 4] == max(summary(m_full)$coefficients[, 4]))
plot(score ~ cls_profs, data = evals)
summary(lm(score ~ cls_profs, data=evals))
which(summary(m_full)$adj.r.squared == max(summary(m_full)$adj.r.squared))
which(summary(m_full)$adj.r.squared == min(summary(m_full)$adj.r.squared))
summary(m_full)$adj.r.squared
which(summary(m_full)$coefficients[, 4] == max(summary(m_full)$coefficients[, 4]))
plot(score ~ cls_profs, data = evals)
summary(lm(score ~ cls_profs, data=evals))
summary(lm(score ~ cls_profs, data=evals))
summary(lm(score ~ cls_profs, data=evals))$adj.r.squared
rm(list=ls())
setwd("~/IS665/Exercise_5/")
evals = read.csv(file="evals.csv", header=TRUE, sep=",", dec=".", quote="\"")
hist(evals$score, xlab="score", main="Histogram of score")
skewness <- function(x){
return(3*(mean(x)-median(x))/sd(x))
}
skewness(evals$score)
boxplot(bty_avg~age, data=evals,xlab="age", ylab="bty_avg", main="Age vs. Beauty average")
plot (evals $ bty_avg ~ evals $ bty_f1lower)
cor (evals $ bty_avg , evals $ bty_f1lower)
plot ( evals [, 13 : 19 ])
m_bty_gen <- lm(score ~ bty_avg + gender , data = evals)
summary(m_bty_gen)
m_bty <- lm(score ~ bty_avg, data = evals)
summary(m_bty)
summary(m_bty_gen)
m_bty_rank <- lm(score ~ bty_avg+rank, data = evals)
summary(m_bty_rank)
#The below statement is the question given by you in this exercise.
#I have not understood what is the question here, as it appears to be a statement.
which(summary(m_full)$coefficients[, 4] == max(summary(m_full)$coefficients[, 4]))
plot(score ~ cls_profs, data = evals)
summary(lm(score ~ cls_profs, data=evals))$adj.r.squared
m_full <- lm(score ~ rank + ethnicity + gender + language + age
+ cls_perc_eval + cls_students + cls_level + cls_profs
+ cls_credits + bty_avg + pic_outfit + pic_color , data = evals)
summary(m_full)
levels(evals$cls_profs)
summary(m_bty_rank)
#The below statement is the question given by you in this exercise.
#I have not understood what is the question here, as it appears to be a statement.
m_full <- lm(score ~ rank + ethnicity + gender + language + age
+ cls_perc_eval + cls_students + cls_level + cls_profs
+ cls_credits + bty_avg + pic_outfit + pic_color , data = evals)
summary(m_full)
levels(evals$cls_profs)
which(summary(m_full)$coefficients[, 4] == max(summary(m_full)$coefficients[, 4]))
plot(score ~ cls_profs, data = evals)
summary(lm(score ~ cls_profs, data=evals))$adj.r.squared
summary(m_full)$coefficients
m_final <- lm(score ~ rank + ethnicity + gender + language + age +
cls_perc_eval + cls_students + cls_level + cls_credits +
bty_avg + pic_outfit + pic_color, data = evals)
summary(m_final)
summary(m_full)
summary(m_full)
m_final <- lm(score ~ rank + ethnicity + gender + language + age +
cls_perc_eval + cls_students + cls_level + cls_credits +
bty_avg + pic_outfit + pic_color, data = evals)
summary(m_final)
m_final_backward <- lm(score ~ ethnicity + gender + language + age + cls_perc_eval +
cls_credits + bty_avg + pic_color, data = evals)
summary(m_final_backward)
summary(m_final_backward)$coefficients
(homesummary(m_final_backward)$coefficients)
names(summary(m_final_backward)$coefficients)
summary(m_final_backward)$coefficients[,1]
summary(m_final_backward)
levels(evals$pic_color)
levels(evals$cls_perc_eval)
qqnormSim(m_final_backward$residuals)
install.packages('qqnormSim')
plot(m_final_backward$residuals)
hist(m_final_backward$residuals)
hist(m_final_backward$fitted.values)
?qqplot
qqplot(m_final_backward$residuals)
qqplot(m_final_backward$residuals)
qqnorm(m_final_backward$residuals)
qqline(m_final_backward$residuals)
par(mfrow=c(2,2),main="Residual Plots for final model(backward selection")
qqnorm(m_final_backward$residuals) +
qqline(m_final_backward$residuals)
?par
par(mfrow=c(2,2), main="Residual Plots for final model-backward selection")
qqnorm(m_final_backward$residuals) +
qqline(m_final_backward$residuals)
?par
par(mfrow=c(2,2), title="Residual Plots for final model-backward selection")
par(mfrow=c(2,2))
title("Residual Plots for final model-backward selection")
qqnorm(m_final_backward$residuals) +
qqline(m_final_backward$residuals)
par(mfrow=c(2,2))
title("Residual Plots for final model-backward selection", outer=TRUE)
qqnorm(m_final_backward$residuals) +
qqline(m_final_backward$residuals)
par(mfrow=c(2,2))
qqnorm(m_final_backward$residuals) +
qqline(m_final_backward$residuals)
title("Residual Plots for final model-backward selection", outer=TRUE)
par(mfrow=c(2,2))
qqnorm(m_final_backward$residuals) + qqline(m_final_backward$residuals)
title("Residual Plots for final model-backward selection", outer=TRUE)
par(mfrow=c(2,2))
qqnorm(m_final_backward$residuals); qqline(m_final_backward$residuals)
title("Residual Plots for final model-backward selection", outer=TRUE)
par(mfrow=c(2,2))
qqnorm(m_final_backward$residuals); qqline(m_final_backward$residuals)
title("Residual Plots for final model-backward selection", outer=TRUE)
par(mfrow=c(2,2))
qqnorm(m_final_backward$residuals, main="Normal Probability Plot")
qqline(m_final_backward$residuals)
title("Residual Plots for final model-backward selection", outer=TRUE)
plot(abs(m_final_backward) ~ m_final_backward$fitted.values, main="Versus Fits")
plot(m_final_backward ~ m_final_backward$fitted.values, main="Versus Fits")
par(mfrow=c(2,2))
qqnorm(m_final_backward$residuals, main="Normal Probability Plot")
qqline(m_final_backward$residuals)
plot(abs(m_final_backward$residuals) ~ m_final_backward$fitted.values, main="Versus Fits")
title("Residual Plots for final model-backward selection", outer=TRUE)
?qqnorm
plot(m_final_backward$residuals ~ m_final_backward$fitted.values, main="Versus Fits")
plot(abs(m_final_backward$residuals) ~ m_final_backward$fitted.values, main="Versus Fits")
plot(abs(m_final_backward$residuals) ~ m_final_backward$fitted.values, main="Versus Fits")
plot(m_final_backward$residuals ~ m_final_backward$fitted.values,
main="Versus Fits", xlab="Fitted Value", ylab="Residual")
qqnorm(m_final_backward$residuals, main="Normal Probability Plot",
xlab="Residual")
qqline(m_final_backward$residuals)
plot(m_final_backward$residuals ~ m_final_backward$fitted.values,
main="Versus Fits", xlab="Fitted Value", ylab="Residual")
plot(m_final_backward$residuals ~ m_final_backward$fitted.values,
main="Versus Fits", xlab="Fitted Value", ylab="Residual")
abline(m_final_backward$residuals ~ m_final_backward$fitted.values)
plot(m_final_backward$residuals ~ m_final_backward$fitted.values,
main="Versus Fits", xlab="Fitted Value", ylab="Residual", col="turquiose3")
abline(m_final_backward$residuals ~ m_final_backward$fitted.values, col="red")
plot(m_final_backward$residuals ~ m_final_backward$fitted.values,
main="Versus Fits", xlab="Fitted Value", ylab="Residual", col="turquoise3")
abline(m_final_backward$residuals ~ m_final_backward$fitted.values, col="red")
abline(m_final_backward$residuals ~ m_final_backward$fitted.values, col="red")
?abline
plot(m_final_backward$residuals ~ m_final_backward$fitted.values,
main="Versus Fits", xlab="Fitted Value", ylab="Residual", col="turquoise3")
abline(lm(m_final_backward$residuals ~ m_final_backward$fitted.values), col="red")
plot(abs(m_final_backward$residuals) ~ m_final_backward$fitted.values,
main="Versus Fits", xlab="Fitted Value", ylab="Residual", col="turquoise3")
abline(lm(abs(m_final_backward$residuals) ~ m_final_backward$fitted.values), col="red")
plot(m_final_backward$residuals ~ m_final_backward$fitted.values,
main="Versus Fits", xlab="Fitted Value", ylab="Residual", col="turquoise3")
abline(lm(m_final_backward$residuals ~ m_final_backward$fitted.values), col="red")
hist(m_final_backward$residuals)
hist(m_final_backward$residuals, main="Histogram", xlab="Residual")
plot(m_final_backward$residuals ~ m_final_backward$fitted.values
)
plot(m_final_backward$residuals ~ m_final_backward$fitted.values,
main="Versus Order", xlab="Observation Order", ylab="Residual", col="turquoise3")
plot(m_final_backward$residuals ~ evals$score,
main="Versus Order", xlab="Observation Order", ylab="Residual", col="turquoise3")
names(m_final_backward)
plot(m_final_backward$residuals ~ m_final_backward$fitted.values,
main="Versus Fits", xlab="Fitted Value", ylab="Residual", col="turquoise3")
abline(lm(m_final_backward$residuals ~ m_final_backward$fitted.values), col="red")
plot(m_final_backward$residuals ~ c(1.0:5.0), main="Versus Order", xlab="Observation Order",
ylab="Residual", col="turquoise3")
plot(m_final_backward$residuals ~ c(1:5), main="Versus Order", xlab="Observation Order",
ylab="Residual", col="turquoise3")
?seq
seq(1, 5, 0.1)
seq(1, 5, 0.10)
plot(m_final_backward$residuals ~ seq(1, 5, 0.1), main="Versus Order", xlab="Observation Order",
ylab="Residual", col="turquoise3")
plot(m_final_backward$residuals ~ nrow(evals), main="Versus Order", xlab="Observation Order",
ylab="Residual", col="turquoise3")
plot(m_final_backward$residuals ~ m_final_backward$residuals, main="Versus Order",
xlab="Observation Order", ylab="Residual", col="turquoise3")
plot(m_final_backward$residuals, main="Versus Order",
xlab="Observation Order", ylab="Residual", col="turquoise3")
qqnorm(m_final_backward$residuals, main="Normal Probability Plot",
xlab="Residual")
qqline(m_final_backward$residuals)
par(mfrow=c(2,2))
qqnorm(m_final_backward$residuals, main="Normal Probability Plot",
xlab="Residual")
qqline(m_final_backward$residuals)
plot(m_final_backward$residuals ~ m_final_backward$fitted.values,
main="Versus Fits", xlab="Fitted Value", ylab="Residual", col="turquoise3")
abline(lm(m_final_backward$residuals ~ m_final_backward$fitted.values), col="red")
hist(m_final_backward$residuals, main="Histogram", xlab="Residual")
par(mfrow=c(1,2,2,1))
qqnorm(m_final_backward$residuals, main="Normal Probability Plot",
xlab="Residual")
qqline(m_final_backward$residuals)
plot(m_final_backward$residuals ~ m_final_backward$fitted.values,
main="Versus Fits", xlab="Fitted Value", ylab="Residual", col="turquoise3")
abline(lm(m_final_backward$residuals ~ m_final_backward$fitted.values), col="red")
hist(m_final_backward$residuals, main="Histogram", xlab="Residual")
title("Residual Plots for final model-backward selection", outer=TRUE)
par(mfrow=c(1,2))
qqnorm(m_final_backward$residuals, main="Normal Probability Plot",
xlab="Residual")
qqline(m_final_backward$residuals)
plot(m_final_backward$residuals ~ m_final_backward$fitted.values,
main="Versus Fits", xlab="Fitted Value", ylab="Residual", col="turquoise3")
abline(lm(m_final_backward$residuals ~ m_final_backward$fitted.values), col="red")
hist(m_final_backward$residuals, main="Histogram", xlab="Residual")
title("Residual Plots for final model-backward selection", outer=TRUE)
par(mfrow=c(2,2),mfcol=c(2,1))
qqnorm(m_final_backward$residuals, main="Normal Probability Plot",
xlab="Residual")
qqline(m_final_backward$residuals)
plot(m_final_backward$residuals ~ m_final_backward$fitted.values,
main="Versus Fits", xlab="Fitted Value", ylab="Residual", col="turquoise3")
par(mfrow=c(2,2))
qqnorm(m_final_backward$residuals, main="Normal Probability Plot",
xlab="Residual")
qqline(m_final_backward$residuals)
plot(m_final_backward$residuals ~ m_final_backward$fitted.values,
main="Versus Fits", xlab="Fitted Value", ylab="Residual", col="turquoise3")
abline(lm(m_final_backward$residuals ~ m_final_backward$fitted.values), col="red")
hist(m_final_backward$residuals, main="Histogram", xlab="Residual")
title("Residual Plots for final model-backward selection", outer=TRUE)
plot(m_final_backward$residuals ~ c(1:nrow(evals)),
main="Versus Orders", xlab="Observation Order", ylab="Residual", col="turquoise3")
plot(m_final_backward$residuals ~ c(1:nrow(evals)),
main="Versus Orders", xlab="Observation Order", ylab="Residual", col="turquoise3")
abline(lm(m_final_backward$residuals ~ c(1:nrow(evals)), col="red")
plot(m_final_backward$residuals ~ c(1:nrow(evals)),
main="Versus Orders", xlab="Observation Order", ylab="Residual", col="turquoise3")
abline(lm(m_final_backward$residuals ~ c(1:nrow(evals))), col="red")
?abline
plot(m_final_backward$residuals ~ c(1:nrow(evals)),
main="Versus Orders", xlab="Observation Order", ylab="Residual", col="turquoise3")
abline(m_final_backward, col="red")
plot(m_final_backward$residuals ~ c(1:nrow(evals)),
main="Versus Orders", xlab="Observation Order", ylab="Residual", col="turquoise3")
abline(lm(m_final_backward$residuals ~ c(1:nrow(evals))), col="red")
plot(score ~ cls_profs, data = evals)
par(mfrow=c(2,2))
qqnorm(m_final_backward$residuals, main="Normal Probability Plot",
xlab="Residual")
qqline(m_final_backward$residuals)
plot(m_final_backward$residuals ~ m_final_backward$fitted.values, pch=19,
main="Versus Fits", xlab="Fitted Value", ylab="Residual", col="turquoise3")
abline(lm(m_final_backward$residuals ~ m_final_backward$fitted.values), col="red")
hist(m_final_backward$residuals, main="Histogram", xlab="Residual")
plot(m_final_backward$residuals ~ c(1:nrow(evals)), pch=19,
main="Versus Orders", xlab="Observation Order", ylab="Residual", col="turquoise3")
abline(lm(m_final_backward$residuals ~ c(1:nrow(evals))), col="red")
title("Residual Plots for final model-backward selection", outer=TRUE)
?title
par(mfrow=c(2,2))
qqnorm(m_final_backward$residuals, main="Normal Probability Plot",
xlab="Residual")
qqline(m_final_backward$residuals)
plot(m_final_backward$residuals ~ m_final_backward$fitted.values, pch=19,
main="Versus Fits", xlab="Fitted Value", ylab="Residual", col="turquoise3")
abline(lm(m_final_backward$residuals ~ m_final_backward$fitted.values), col="red")
hist(m_final_backward$residuals, main="Histogram", xlab="Residual")
plot(m_final_backward$residuals ~ c(1:nrow(evals)), pch=19,
main="Versus Order", xlab="Observation Order", ylab="Residual", col="turquoise3")
abline(lm(m_final_backward$residuals ~ c(1:nrow(evals))), col="red")
title("Residual Plots for final model-backward selection", font.main= 4,outer=TRUE)
rm(list=ls())
setwd("~/IS665/Exercise_5/")
evals = read.csv(file="evals.csv", header=TRUE, sep=",", dec=".", quote="\"")
hist(evals$score, xlab="score", main="Histogram of score")
skewness <- function(x){
return(3*(mean(x)-median(x))/sd(x))
}
skewness(evals$score)
boxplot(bty_avg~age, data=evals,xlab="age", ylab="bty_avg", main="Age vs. Beauty average")
plot (evals $ bty_avg ~ evals $ bty_f1lower)
cor (evals $ bty_avg , evals $ bty_f1lower)
plot ( evals [, 13 : 19 ])
m_bty_gen <- lm(score ~ bty_avg + gender , data = evals)
summary(m_bty_gen)
m_bty <- lm(score ~ bty_avg, data = evals)
summary(m_bty)
summary(m_bty_gen)
m_bty_rank <- lm(score ~ bty_avg+rank, data = evals)
summary(m_bty_rank)
#The below statement is the question given by you in this exercise.
#I have not understood what is the question here, as it appears to be a statement.
m_full <- lm(score ~ rank + ethnicity + gender + language + age
+ cls_perc_eval + cls_students + cls_level + cls_profs
+ cls_credits + bty_avg + pic_outfit + pic_color , data = evals)
summary(m_full)
levels(evals$cls_profs)
which(summary(m_full)$coefficients[, 4] == max(summary(m_full)$coefficients[, 4]))
plot(score ~ cls_profs, data = evals)
summary(lm(score ~ cls_profs, data=evals))$adj.r.squared
summary(m_full)
m_final <- lm(score ~ rank + ethnicity + gender + language + age +
cls_perc_eval + cls_students + cls_level + cls_credits +
bty_avg + pic_outfit + pic_color, data = evals)
summary(m_final)
m_final_backward <- lm(score ~ ethnicity + gender + language + age + cls_perc_eval +
cls_credits + bty_avg + pic_color, data = evals)
summary(m_final_backward)
par(mfrow=c(2,2))
qqnorm(m_final_backward$residuals, main="Normal Probability Plot",
xlab="Residual")
qqline(m_final_backward$residuals)
plot(m_final_backward$residuals ~ m_final_backward$fitted.values, pch=19,
main="Versus Fits", xlab="Fitted Value", ylab="Residual", col="turquoise3")
abline(lm(m_final_backward$residuals ~ m_final_backward$fitted.values), col="red")
hist(m_final_backward$residuals, main="Histogram", xlab="Residual")
plot(m_final_backward$residuals ~ c(1:nrow(evals)), pch=19,
main="Versus Order", xlab="Observation Order", ylab="Residual", col="turquoise3")
abline(lm(m_final_backward$residuals ~ c(1:nrow(evals))), col="red")
title("Residual Plots for final model-backward selection", font.main= 4,outer=TRUE)
title("Residual Plots for final model-backward selection")
