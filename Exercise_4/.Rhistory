length(commuteTime[commuteTime >= 20])
(length(commuteTime[commuteTime<17])/length(commuteTime)) * 100
(sum(commuteTime<17)/sum(commuteTime>0)) * 100
commuteTime = c(17, 16, 20, 24, 22, 15, 21, 15, 17, 22)
max(commuteTime)
mean(commuteTime)
min(commuteTime)
commuteTime = replace(commuteTime, commuteTime == 24, 18 )
mean(commuteTime)
sum(commuteTime>=20)
## or
length(commuteTime[commuteTime >= 20])
(length(commuteTime[commuteTime<17])/length(commuteTime)) * 100
## or
(sum(commuteTime<17)/sum(commuteTime>0)) * 100
length(bill[bill>40])
bill = c(46,33, 39, 37, 46, 30, 48, 32, 49, 35, 30, 48)
yearBill = sum(bill)
yearBill
min(bill)
max(bill)
length(bill[bill>40])
(length(bill[bill>40])/length(bill)) * 100
bill = c(46,33, 39, 37, 46, 30, 48, 32, 49, 35, 30, 48)
yearBill = sum(bill)
yearBill
min(bill)
max(bill)
sum(bill>40)
length(bill[bill>40])
(length(bill[bill>40])/length(bill)) * 100
5/12
bill = c(46,33, 39, 37, 46, 30, 48, 32, 49, 35, 30, 48)
yearBill = sum(bill)
yearBill
min(bill)
max(bill)
length(bill[bill>40])
(length(bill[bill>40])/length(bill)) * 100
sum(bill[bill>40])
100 * (sum(bill[bill>40])/yearBill)
237/473
x = c(1, 8, 2, 6, 3, 8, 5, 5, 5, 5)
sum(x)/10
for(element in x){
print(log10(element))
}
diff(range(x))
x = c(1, 8, 2, 6, 3, 8, 5, 5, 5, 5)
sum(x)/10
for(element in x){
print(log10(element))
}
for(element in X){
print((element^4.4)/2.875)
}
diff(range(x))
x = c(1, 8, 2, 6, 3, 8, 5, 5, 5, 5)
sum(x)/10
for(element in x){
print(log10(element))
}
for(element in x){
print((element^4.4)/2.875)
}
diff(range(x))
carPrice = c(9000, 9500, 9400, 9400, 10000, 9500, 10300, 10200)
avgcarPrice = mean(carPrice)
avgcarPrice
9962.5/9500
9962.5/9500 * 100
x = 9500/100
x*1.048684
x = c(1,3,5,7,9)
y = c(2,3,5,7,11,13)
x+1 #[1] 2 4 6 8 10
y*2 #[1] 4 6 10 14 22 26
length(x) #[1] 5
length(y) #[1] 6
sum(x>5);
sum(x[x>5]);
sum(x>5 | x< 3) #[1] 3
y[3] #[1] 5
y[-3] #[1] 2 3 7 11 13
y[x] #[1] 2 5 11 NA NA
y[y>=7] #[1] 7 11 13
Price_Rear <- Cars93$Price[which(Cars93$DriveTrain == "Rear")]
library(MASS)
data("Cars93")
nrow(Cars93)  ## To be used in R
Price_Rear <- Cars93$Price[which(Cars93$DriveTrain == "Rear")]
mean(Price_Rear)
median(Price_Rear)
View(Price_Rear)
View(Cars93$DriveTrain=="Rear")
View(sum(Cars93$DriveTrain=="Rear"))
View(Cars93)
sd(Price_Rear)
Cars93$Passengers==7
Cars93[Cars93$Passengers==7]
Cars93(Cars93$Passengers==7)
View(Cars93$Passengers==7)
which.min(Cars93$Passengers==7)
Cars93[which.min(Cars93$Passengers==7)]
which.min(Cars93$Passengers==7)
?which.min
which(Cars93$Passengers==7)
test<-which(Cars93$Passengers==7)
Cars93[test]
Cars93$test
Cars93[test,]
which.min(Cars93$Passengers==7)
Cars93[which.min(Cars93$Passengers==7),]
test<-Cars93[which.min(Cars93$Passengers==7),]
View(test)
test1<-Cars93[which(Cars93$Passengers==7),]
View(test1)
test<-Cars93[which.min(Cars93$Passengers==7),]
View(test)
test<-which.min(Cars93$Passengers==7)
Cars93[test,]
which.min(Cars93$Passengers==7)
test<-which.min(Cars93$Passengers==7)
Cars93[test,]
test
?which.min
hp_7pgr <- which(Cars93$Passengers==7)
View(hp_7pgr)
min(Cars[hp_7pgr,])
min(Cars93[hp_7pgr,])
Cars93[hp_7pgr,]
cars_hp_7pgr <- Cars93[hp_7pgr,]
View(cars_hp_7pgr)
min(cars_hp_7pgr$Horsepower)
hp_7pgr <- which.min(Cars93$Passengers==7)
cars_hp_7pgr <- Cars93[hp_7pgr,]
min(cars_hp_7pgr$Horsepower)
hp_7pgr <- which(Cars93$Passengers==7)
cars_hp_7pgr <- Cars93[hp_7pgr,]
min(cars_hp_7pgr$Horsepower)
hpatleast6pgr <- which(Cars93$Passengers>=6)
cars_hpatleast6pgr <- Cars93[hpatleast6pgr,]
min(cars_hpatleast6pgr$Horsepower)
View(cars_hpatleast6pgr)
```
library(MASS)
data("Cars93")
Price_Rear <- Cars93$Price[which(Cars93$DriveTrain == "Rear"),]
Price_Rear <- Cars93$Price[which(Cars93$DriveTrain == "Rear")]
test<-Cars93$Horsepower[which(Cars93$Passengers==7)]
min(test)
min(Cars93$Horsepower[which(Cars93$Passengers==7)])
View(Price_Rear)
Price_Rear
asort(Price_Rear)
sort(Price_Rear)
sort(Price_Rear)
length(Price_Rear)/2
length(Price_Rear)
length(Price_Rear)/2
Price_Rear[length(Price_Rear)/2]
test<-  sort(Price_Rear)
test[length[Price_Rear]/2]
test[8]
mean(Price_Rear)
median(Price_Rear)
mode(test)
unique(test)
length(unique(test))
hist(Price_Rear)
hist(Price_Rear,50)
hist(Price_Rear,100)
hist(Price_Rear)
rnorm(Price_Rear)
## Generate two data sets
## First Normal, second from a t-distribution
words1 = rnorm(100); words2 = rt(100, df=3)
## Have a look at the densities
plot(density(words1));plot(density(words2))
## Perform the test
shapiro.test(words1); shapiro.test(words2)
## Plot using a qqplot
qqnorm(words1);qqline(words1, col = 2)
qqnorm(words2);qqline(words2, col = 2)
skewness(Price_Rear)
skewness(test)
?skewness
install.packages(skewness)
library(moments)
require(moments)
install.packages(moments)
install.packages("moments")
library(moments)
skewness(Price_Rear)
kurtosis(Price_Rear)
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
ggplot(Price_Rear, hist(Price_Rear))
ggplot(Price_Rear, aes(Price_Rear,1:100))
ggplot(Price_Rear, aes(Price_Rear))
ggplot(Price_Rear
)
library(MASS)
data("Cars93")
Price_Rear <- Cars93$Price[which(Cars93$DriveTrain == "Rear")]
mean(Price_Rear)
median(Price_Rear)
mean(Price_Rear)
median(Price_Rear)
Price_Rear
length(Price_Rear<mean(Price_Rear))
Price_Rear<28.95
Price_Rear[Price_Rear<28.95]
Price_Rear[Price_Rear<28.95]
length(Price_Rear[Price_Rear<28.95])
length(Price_Rear[Price_Rear>28.95])
which(unique(Price_Rear))
unique(Price_Rear)
length(unique(Price_Rear))
quantile(Price_Rear)
quantile(Price_Rear)
mean(Price_Rear)
median(Price_Rear)
quantile(Price_Rear, 0.5)
median(Price_Rear)
quantile(Price_Rear, 0.5)
sd(Price_Rear)
mean(Price_Rear)==quantile(Price_Read, 0.5)
library(MASS)
data("Cars93")
Price_Rear <- Cars93$Price[which(Cars93$DriveTrain == "Rear")]
mean(Price_Rear)==quantile(Price_Read, 0.5)
mean(Price_Rear)==quantile(Price_Rear, 0.5)
mean(Price_Rear)==quantile(Price_Rear, 0.5)
median(Price_Rear)==quantile(Price_Rear, 0.5)
rm(list=ls())
setwd("~/IS665")
baseball = read.csv(file="baseball.csv", header=TRUE, sep=",", quote="\"", dec=".")
plot(runs ~ at_bats, data=baseball, xlab="at_bats", ylab="runs", pch=19, col="turquoise4")
cor(baseball$runs, baseball$at_bats)
m1 <- lm(runs ~ at_bats, data=baseball)
summary(m1)
m1$coefficients
m2 <- lm(runs ~ homeruns, data=baseball)
m2$coefficients
plot(runs ~ at_bats, data=baseball, xlab="at_bats", ylab="runs", pch=19, col="turquoise4")
abline(m1, col="red")
my_prediction=function(x, my_model){
pr=my_model$coefficients[1]+ x*my_model$coefficients[2]
return(as.numeric(pr))
}
my_prediction(5578, m1)
my_prediction=function(x, my_model){
pr=my_model$coefficients[1]+ x*my_model$coefficients[2]
return(round(as.numeric(pr)))
}
my_prediction(5578, m1)
my_prediction(5578, m1)
predict(m1, 5578)
predict(m1, c(5578))
newdata=data.frame("at_bats"=c(5578))
predict(m1, newdata)
summary(m1)
plot(runs ~ at_bats, data=baseball, xlab="at_bats", ylab="runs", pch=19, col="turquoise4",showSquares = TRUE)
abline(m1, col="red")
plot(baseball$at_bats, baseball$runs, showSquares = TRUE)
plot(baseball$at_bats, baseball$runs, showSquares = TRUE)
warning()
warnings()
?showSquares
my_prediction=function(x, my_model){
pr=my_model$coefficients[1]+ x*my_model$coefficients[2]
return(round(as.numeric(pr)))
}
my_prediction(5578, m1)
my_prediction=function(x, my_model){
pr=my_model$coefficients[1]+ x*my_model$coefficients[2]
return(as.numeric(pr))
}
my_prediction(5578, m1)
m1$coefficients
&runsCirc;
&runscirc;
"&runscirc;"
"&rcirc;"
&rcirc;
m2$coefficients
predict(m1, newdata)
m1$coefficients[1] + m1$coefficients[2] * 5578
View(baseball)
widehat(cy)
require(plotmath)
demo(plotmath)
install.packages(plotmath)
install.packages('plotmath')
reuire(plotmath)
require(plotmath)
plotmath(x)
widehat(x)
reuire(graphics)
require(graphics)
widehat(xy)
require(graphics)
z=widehat("xy")
hat(x)
hat('x')
hat(njfj)
$\widehat{\alpha}$
rm(list=ls())
setwd("~/IS665")
baseball = read.csv(file="baseball.csv", header=TRUE, sep=",", quote="\"", dec=".")
plot(runs ~ at_bats, data=baseball, xlab="at_bats", ylab="runs", pch=19, col="turquoise4")
cor(baseball$runs, baseball$at_bats)
m1 <- lm(runs ~ at_bats, data=baseball)
summary(m1)
m1$coefficients
m2 <- lm(runs ~ homeruns, data=baseball)
m2$coefficients
plot(runs ~ at_bats, data=baseball, xlab="at_bats", ylab="runs", pch=19, col="turquoise4")
abline(m1, col="red")
newdata = c(5578)
predict(m1, newdata)
newdata = c("at_bats"=5578)
predict(m1, newdata)
newdata = as.data.frame("at_bats"=c(5578))
predict(m1, newdata)
newdata = data.frame("at_bats"=c(5578))
predict(m1, newdata)
newdata = data.frame("at_bats"=c(5578))
predict(m1, newdata)
round(727.965)
m1$residuals
summary(m1)
?resid
residuals.lm(m1)
?anipulate
?maipulate
install.packages('manipulate')
newdata = data.frame("at_bats"=c(5578))
predictedValue = predict(m1, newdata)
as.numeric(predictedValue)
baseball[runs>predictedValue]
baseball[baseball$runs>predictedValue]
baseball$runs>predictedValue
min(baseball$runs>predictedValue)
min(baseball$runs[which(baseball$runs>predictedValue)])
newdata$at_bats>baseball_at_bats
newdata$at_bats>baseball$at_bats
baseball$runs[which(newdata$at_bats>baseball$at_bats)]
baseball$runs[which(baseball$at_bats>=newdata$at_bats>)]
baseball$runs[which(baseball$at_bats=>newdata$at_bats>)]
baseball$runs[which(baseball$at_bats>newdata$at_bats>)]
baseball$runs[which(baseball$at_bats>=newdata$at_bats)]
min(baseball$runs[which(baseball$at_bats>=newdata$at_bats)])
min(baseball$runs[which(baseball$at_bats==newdata$at_bats)])
min(baseball$runs[which(baseball$at_bats>=newdata$at_bats)])
which.min(baseball$at_bats>=newdata$at_bats)
baseball$runs[which.min(baseball$at_bats>=newdata$at_bats)]
which.min(baseball$at_bats>=newdata$at_bats)
min(baseball$at_bats[which(baseball$at_bats>=newdata$at_bats)])
min(baseball$at_bats[which.min(baseball$at_bats>=newdata$at_bats)])
?which.min
baseball$at_bats[which(baseball$at_bats>=newdata$at_bats)]
observedValue = baseball$runs[min(baseball$at_bats[which(baseball$at_bats>=newdata$at_bats)])]
observedValue = baseball$runs[baseball$at_bats=min(baseball$at_bats[which(baseball$at_bats>=newdata$at_bats)])]
observedValue = baseball$runs[baseball$at_bats==min(baseball$at_bats[which(baseball$at_bats>=newdata$at_bats)])]
case = as.numeric(min(baseball$at_bats[which(baseball$at_bats>=newdata$at_bats)]))
observedValue = baseball$runs[baseball$at_bats==case]
case = min(baseball$at_bats[which(baseball$at_bats>=newdata$at_bats)])
predictedValue = predict(m1, newdata)
predictedValue = as.numeric(predictedValue)
predictedValue = as.numeric(round(predictedValue))
observedClosest_at_bats = min(baseball$at_bats[which(baseball$at_bats>=newdata$at_bats)])
observedValue = baseball$runs[baseball$at_bats==case]
residual = observedValue - predictedValue
predict(m1, newdata)
728-713
floor(17.154)
newdata = data.frame("at_bats"=c(5578))
predictedValue = predict(m1, newdata)
predictedValue = as.numeric(floor(predictedValue))
observedClosest_at_bats = min(baseball$at_bats[which(baseball$at_bats>=newdata$at_bats)])
observedValue = baseball$runs[baseball$at_bats==case]
residual = observedValue - predictedValue
residual
predict(m1, newdata)
predict(m1, newdata) - 713
newdata = data.frame("at_bats"=c(5578))
predictedValue = predict(m1, newdata)
observedClosest_at_bats = min(baseball$at_bats[which(baseball$at_bats>=newdata$at_bats)])
observedValue = baseball$runs[baseball$at_bats==case]
residual = observedValue - predictedValue
residual
residual
rm(list=ls())
setwd("~/IS665")
baseball = read.csv(file="baseball.csv", header=TRUE, sep=",", quote="\"", dec=".")
plot(runs ~ at_bats, data=baseball, xlab="at_bats", ylab="runs", pch=19, col="turquoise4")
cor(baseball$runs, baseball$at_bats)
m1 <- lm(runs ~ at_bats, data=baseball)
summary(m1)
m1$coefficients
m2 <- lm(runs ~ homeruns, data=baseball)
m2$coefficients
plot(runs ~ at_bats, data=baseball, xlab="at_bats", ylab="runs", pch=19, col="turquoise4")
abline(m1, col="red")
newdata = data.frame("at_bats"=c(5578))
predictedValue = predict(m1, newdata)
observedClosest_at_bats = min(baseball$at_bats[which(baseball$at_bats>=newdata$at_bats)])
observedValue = baseball$runs[baseball$at_bats==case]
residual = observedValue - predictedValue
residual
newdata = data.frame("at_bats"=c(5578))
predictedValue = predict(m1, newdata)
observedClosest_at_bats = min(baseball$at_bats[which(baseball$at_bats>=newdata$at_bats)])
observedValue = baseball$runs[baseball$at_bats==observedClosest_at_bats]
residual = observedValue - predictedValue
residual
newdata = data.frame("at_bats"=c(5578))
predictedValue = as.numeric(predict(m1, newdata))
observedClosest_at_bats = min(baseball$at_bats[which(baseball$at_bats>=newdata$at_bats)])
observedValue = as.numeric(baseball$runs[baseball$at_bats==observedClosest_at_bats])
residual = observedValue - predictedValue
residual
plot(bat_avg, runs, data=baseball)
plot(runs~bat_avg, data=baseball)
plot(runs~bat_avg, data=baseball, xlab="bat_avg", ylab="runs")
cor(baseball$runs, baseball$bat_avg)
plot(runs~bat_avg, data=baseball, xlab="bat_avg", ylab="runs", main="Batting Average vs. Runs")
plot(runs ~ at_bats, data=baseball, xlab="at_bats", ylab="runs", pch=19, col="turquoise4", main="At bats vs. Runs")
plot(runs~bat_avg, data=baseball, xlab="bat_avg", ylab="runs", main="Batting Average vs. Runs")
plot(runs~bat_avg, data=baseball, xlab="bat_avg", ylab="runs", pch=19, col="turquoise4", main="Batting Average vs. Runs")
m3 = lm(bat_avg, runs, data=baseball)
abline(m3, col="red")
m3 = lm(bat_avg, runs, data=baseball)
plot(runs~bat_avg, data=baseball, xlab="bat_avg", ylab="runs", pch=19, col="turquoise4", main="Batting Average vs. Runs")
abline(m3, col="red")
m3 = lm(runs~bat_avg, data=baseball)
plot(runs~bat_avg, data=baseball, xlab="bat_avg", ylab="runs", pch=19, col="turquoise4", main="Batting Average vs. Runs")
abline(m3, col="red")
?abline
m3 = lm(runs~bat_avg, data=baseball)
plot(runs~bat_avg, data=baseball, xlab="bat_avg", ylab="runs", pch=19, col="turquoise4", main="Batting Average vs. Runs")
abline(m3, col="red")
pow(m1$residuals,2)
(m1$residuals^2)
sum(m1$residuals^2)
summary(r1)
summary(m1)
0.6305^2
m1$residuals
m1
0.6305^2
cor(baseball$runs, baseball$at_bats)
x=cor(baseball$runs, baseball$at_bats)
x^2
m1
summary(m1)
m1$qr
m1$rank
m1$fitted.values
m1$assign
m1$terms
?lm
m1_R2 = cor(baseball$runs, baseball$at_bats)^2
?Subscript
summary(m1)
summary(m1)$r.squared
summary(m2)$r.squared
summary(m3)$r.squared
R2_runsVSat_bats = summary(m1)$r.squared
R2_runsVSat_bats
R2_runsVSbat_avg = summary(m3)$r.squared
R2_runsVSbat_avg
R2_runsVSat_bats = summary(m1)$adj.r.squared
R2_runsVSat_bats
R2_runsVSbat_avg = summary(m3)$adj.r.squared
R2_runsVSbat_avg
summary(m1)
R2_runsVSat_bats = summary(m1)$r.squared
R2_runsVSat_bats
R2_runsVSbat_avg = summary(m3)$r.squared
R2_runsVSbat_avg
setwd("~/IS665/Exercise_4")
rm(list=ls())
setwd("~/IS665/Exercise_4")
baseball = read.csv(file="baseball.csv", header=TRUE, sep=",", quote="\"", dec=".")
plot(runs ~ at_bats, data=baseball, xlab="at_bats", ylab="runs", pch=19, col="turquoise4",
main="At bats vs. Runs")
cor(baseball$runs, baseball$at_bats)
m1 <- lm(runs ~ at_bats, data=baseball)
summary(m1)
m1$coefficients
m2 <- lm(runs ~ homeruns, data=baseball)
m2$coefficients
plot(runs ~ at_bats, data=baseball, xlab="at_bats", ylab="runs", pch=19, col="turquoise4")
abline(m1, col="red")
newdata = data.frame("at_bats"=c(5578))
predictedValue = as.numeric(predict(m1, newdata))
observedClosest_at_bats = min(baseball$at_bats[which(baseball$at_bats>=newdata$at_bats)])
observedValue = as.numeric(baseball$runs[baseball$at_bats==observedClosest_at_bats])
residual = observedValue - predictedValue
residual
m3 = lm(runs~bat_avg, data=baseball)
plot(runs~bat_avg, data=baseball, xlab="bat_avg", ylab="runs", pch=19, col="turquoise4",
main="Batting Average vs. Runs")
abline(m3, col="red")
R2_runsVSat_bats = summary(m1)$r.squared
R2_runsVSat_bats
R2_runsVSbat_avg = summary(m3)$r.squared
R2_runsVSbat_avg
